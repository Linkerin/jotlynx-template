---
import { render, type CollectionEntry } from 'astro:content';

import ArticleDates from '@/components/ArticleDates.astro';
import BackToTop from '@/components/BackToTop.astro';
import RightAside from '@components/RightAside/RightAside.astro';
import ArrowLeftIcon from '@assets/icons/arrow-left.svg';
import ArrowRightIcon from '@assets/icons/arrow-right.svg';
import MainLayout from './MainLayout.astro';

interface Props {
  article: CollectionEntry<'articles'>;
  articles: CollectionEntry<'articles'>[];
}

const { article, articles } = Astro.props;

const { Content, headings } = await render(article);

const created = article.data.created ? new Date(article.data.created) : null;
const updated = article.data?.updated ? new Date(article.data.updated) : null;

const currArticleIndex = articles.findIndex(
  articleElem => articleElem.id === article.id
);
const prevArticle =
  currArticleIndex === 0 ? null : articles.at(currArticleIndex - 1);
const nextArticle = articles.at(currArticleIndex + 1);
---

<MainLayout
  title={article.data.title}
  description={article.data.description}
  keywords={article.data.keywords}
  ogImage={article.data.ogImage}
>
  <div class="jl-article-container" data-pagefind-body>
    <article
      id="jl-md-article"
      class:list={{
        'jl-no-external-links': article.data.externalLinkIcon === false
      }}
    >
      <h1 id="_top">{article.data.title}</h1>

      <div class="jl-article-meta-container">
        {created && <ArticleDates created={created} updated={updated} />}
        {
          article.data.tags && article.data.tags.length > 0 && (
            <ul class="jl-article-tags">
              {article.data.tags.map(tag => (
                <li>
                  <a
                    href={`/tags/${tag}`}
                    aria-label={`To articles containing '${tag}' tag`}
                  >
                    #{tag}
                  </a>
                </li>
              ))}
            </ul>
          )
        }
      </div>

      <Content />

      <hr class="jl-article-footer-hr" />

      <footer class="jl-article-footer">
        {
          prevArticle && (
            <a
              id="jl-prev-article"
              href={`/articles/${prevArticle.id}`}
              aria-label="To the previous article"
              class="jl-article-footer-link"
            >
              <span>
                <ArrowLeftIcon />
              </span>
              <div class="jl-article-footer-text-container">
                <p>Previous article</p>
                <p>{prevArticle.data.title}</p>
              </div>
            </a>
          )
        }
        {
          nextArticle && (
            <a
              id="jl-next-article"
              href={`/articles/${nextArticle.id}`}
              aria-label="To the next article"
              class="jl-article-footer-link"
            >
              <div class="jl-article-footer-text-container">
                <p>Next article</p>
                <p>{nextArticle.data.title}</p>
              </div>
              <span>
                <ArrowRightIcon />
              </span>
            </a>
          )
        }
      </footer>
    </article>
  </div>
  {
    article.data.toc !== false && headings && headings.length > 0 && (
      <RightAside headings={headings} title={article.data.title} />
    )
  }
  <BackToTop />
</MainLayout>

<style>
  .jl-article-container {
    padding-inline: var(--jl-spacing-lg);
    padding-block-end: var(--jl-spacing-md);
  }

  :global(.jl-no-external-links a::after) {
    display: none;
  }

  article {
    margin: 0 auto;
    max-width: var(--jl-content-max-width);
  }

  #_top {
    scroll-margin-block-start: calc(
      var(--jl-header-height) + var(--jl-spacing-lg)
    );
  }

  .jl-article-meta-container {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: flex-start;
    gap: var(--jl-spacing-xs);
    margin-block-end: var(--jl-spacing-md);
  }

  .jl-article-tags {
    display: flex;
    align-items: center;
    flex-wrap: wrap;
    gap: var(--jl-spacing-sm);
    font-style: italic;
    font-size: var(--jl-font-size-small);
    color: var(--jl-color-text-secondary);
    list-style: none;
    padding-inline: 0rem;
  }

  .jl-article-footer-hr {
    margin-block: var(--jl-spacing-lg);
    background-color: var(--jl-color-accent);
  }

  .jl-article-footer {
    display: grid;
    grid-template-columns: repeat(2, minmax(0, 1fr));
    gap: var(--jl-spacing-md);
    margin-block-end: var(--jl-spacing-lg);
  }

  @media (max-width: 767px) {
    .jl-article-footer {
      grid-template-columns: minmax(0, 1fr);
    }
  }

  .jl-article-footer-link {
    display: flex;
    flex-direction: row;
    gap: var(--jl-spacing-xs);
    text-decoration: none;

    & span {
      font-size: var(--jl-size-icon);
    }
  }

  #jl-next-article {
    justify-content: end;

    & > div {
      text-align: end;
    }
  }

  .jl-article-footer-text-container {
    & > p {
      margin-block: 0px;
    }
    & > p:first-of-type {
      color: var(--jl-color-accent);
    }
  }
</style>
